version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"        # Porta AMQP
      - "15672:15672"      # UI de administração
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sensores
      MYSQL_USER: sensor
      MYSQL_PASSWORD: bios1480
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d 
    networks:
      - app-network

  sensor-service:
    build:
      context: ./SensorService
    container_name: SensorService
    volumes:
      - C:/dados:/data
    depends_on:
      - rabbitmq
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=admin
    networks:
      - app-network

  processor-service:
    build:
      context: ./ProcessorService
    container_name: ProcessorService
    depends_on:
      - rabbitmq
      - mysql
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
      - RABBITMQ_QUEUE=dados-brutos
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=sensor
      - MYSQL_PASSWORD=bios1480
      - MYSQL_DATABASE=sensores
    networks:
      - app-network

  dashboard-api:
    build:
      context: ./DashboardAPI
    container_name: DashboardAPI
    ports:
      - "8081:8081"
      - "8080:8080"
      - "7159:7159"
      - "5164:5164"
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
